단순 연결 리스트는 링크가 특정 방향으로만 이동이 가능해서, 
현재 노드의 이전 노드를 찾기가 어려움. (삭제하면 이전 노드를 따로 입력해야함.)
// void deletee(NODE *ptr, NODE *first, NODE *temp)
// first 뒤의 temp를 삭제하는 함수 
// ../Basic_Linked_List/linked_list.c에 있음.

포인터를 양방향으로 이동이 가능하고, 각 노드마다 왼쪽, 오른쪽 링크가 생김.

메모리 조금 더 쓴다는 단점 존재.

헤드 노드라고
item은 없는데
제일 왼쪽에 있는 이중 연결 리스트를 llink에
제일 오른쪽에 있는 이중 연결 리스트를 rlink에 할당하는 방식도 있음.
제일 왼쪽에 llink도 헤드노드 가르키고, 
제일 오른쪽 rlink도 헤드노드 가르키는 방식.