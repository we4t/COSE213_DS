동적 해싱의 배경 : 
확장성 해싱을 위해.
크기를 2배로 증가시키고, 해시 함수도 바꿈. (2배 크기에 맞게)
데이터를 새로 만든 해시 테이블에 다시 사상해야 하고, 연산을 그만함

디렉터리를 이용한 동적 해싱.
디렉토리 : 버킷들에 대한 포인터를 저장함.
depth : 디렉토리를 인덱싱하는 h(k)의 비트 수 -> t bit라 하자.
size  : h(k)의 비트 수에 좌우됨, 버킷 수 : 2^t

ex) 
h(k, 2) -> 디렉터리 사이즈 : 2^2 = 4
h(k, 5) -> 디렉터리 사이즈 : 2^5 = 32

depth 수를 늘려가서 칸을 늘리는 방식.

키 k 탐색 시 index : h(k, t)

오버플로를 처리할 때 모든 키에 대해 h(k, u)가 같지 않게 하는 u를 정함.
크기 재조정 후 오버플로 된 버킷을 분할함.
포인터도 새 버킷을 가리키도록 갱신시킴.
오버플로된 버킷에 있는 엔트리들만 재해싱하면 되므로 빠르게 처리함.