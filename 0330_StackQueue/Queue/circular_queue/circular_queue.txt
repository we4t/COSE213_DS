선형 큐의 문제점 : 
큐를 사용하다보면 front 값이 계속 증가하므로
큐가 full해도 막상 front 이전의 공간이 비어있음.
그렇다고 모든 원소들을 앞으로 옮기기도 애매함. (O(n)의 시간복잡도, 굳이?)
따라서, 큐를 원형으로 생각해서 진짜 full인 경우를 판단함.

만약 큐를 사용할 때 계속 사용하다보면 진짜 full 한 경우가 생길 수 있다.
하지만, front == rear인 경우가 full인지, empty인지 모른다.
따라서, 특별히 한 칸을 희생해서 큐를 사용할 땐 하나의 칸을 항상 비워놓음. (front가 지칭하는 공간)

empty : front == rear
full : (rear + 1)%MAX_QUEUE_SIZE == front (rear 바로 앞이 front)

